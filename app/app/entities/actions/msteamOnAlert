var config = require("app/config/config");
var _ = require("modules/underscore/underscore.js")._;
var mscModule = require('msteam/MicrosoftTeams');

var log = require("log");
log.setLevel("INFO");

function execute(event, signal) {
  if(!signal){
    return;
  }


  var mt=new mscModule.MicrosoftTeams();
  var cnMngr=mt.getConnectorManager();
  var myConnector=cnMngr.getConnector("general");
  
  var params = getEventConfig(event, signal);

  var url = "https://"+config.subDomain+".scriptrapps.io/smart-agriculture/index#/dashboard/deviceId/"+event.id+"?chart=" + params.chart;
  //var url = "https://"+config.subDomain+".scriptrapps.io/smart-agriculture/index#/dashboard/deviceId/"+event.id;

  var msg = {
    "@context": "https://schema.org/extensions",
    "@type": "MessageCard",
    "potentialAction": [
      {
        "@type": "OpenUri",
        "name": "View in dashboard",
        "targets": [
          {
            "os": "default",
            "uri": url
          }
        ]
      }
    ],
    "sections": [
      {
        "facts": [
          {
            "name": "Event:",
            "value": getEventConfig(event, signal).txt
          },
          {
            "name": "EventCode:",
            "value": signal
          },
          {
            "name": "Sensor Value:",
            "value": getEventConfig(event, signal).value
          }
        ],
        "text": "Event Released for device: "+event.id
      }
    ],
    "summary": "CxC Smart Agriculture",
    "themeColor": "612480",
    "title": "CxC Smart Agriculture"
  };

  log.info("[app/entities/actions/msteamOnAlert] Msg is: " + JSON.stringify(msg));
  try {

    var result =  myConnector.send(
      msg
    );
    log.info("[app/entities/actions/msteamOnAlert] returned from msTeams: " + JSON.stringify(result));

    //return xmlToJson(result);
  } catch (exception) {
    log.info("[app/entities/actions/msteamOnAlert] error: " +  JSON.stringify(exception));
    //return exception;
  }

}

function getEventConfig(event, signal){
  var eConf = {"txt":"","value":""};
  switch(signal){
    case "F":
      eConf = {"txt":"Freez", "value":event.temperature, "chart":"temperature"};
      break;
    case "FR":
      eConf = {"txt":"Freez Recover", "value":event.temperature, "chart":"temperature"}
      break;
    case "LOWBAT":
      eConf = {"txt": "Low battery", "value":event.battery, "chart":"battery"};
      break;
  }
  return eConf
}