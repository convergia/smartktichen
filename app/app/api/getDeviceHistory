var deviceManager = require("app/entities/deviceManager")

var query = {};
if(request.body != null){
	query = request.body;
}else if(request.parameters.body){
	query = request.parameters.body;
} else {
  query = request.parameters;
}

if(typeof query == 'string'){
  	try{
    	query = JSON.parse(query);   
    }catch(e){
      	return "INVALID OR MISSING PARAMETER";
    }
}

if(query.timeStart==null ) {//last "50" records
  var devices = deviceManager.getDeviceHistoricalEntries(query.id);

} else {//with dates

  var counting = deviceManager.countDeviceEntriesByTime(query.id, query.timeStart, query.timeEnd );
//log.info("counting: "+JSON.stringify(counting));

  var devices = [];
  //var devicesGlob = [];

  if(counting.count>0) {
    var bouclePage = counting.count/50;
    bouclePage = Math.ceil(bouclePage);
    if(bouclePage>10) bouclePage = 10; //limite max


    for(var pn=0; pn<bouclePage; pn++){
      var pageNum = pn+1;
      var devicesPg = deviceManager.getDeviceEntriesByTime(query.id, query.timeStart, query.timeEnd, pageNum );

      devices = devices.concat(devicesPg);

    }
    //devices = devicesGlob;

  }

//  pageNum = 1;
//  var devices = deviceManager.getDeviceEntriesByTime(query.id, query.timeStart, query.timeEnd, pageNum );
}
if(devices==null) devices = [];
return devices;